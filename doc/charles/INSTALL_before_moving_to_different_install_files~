01-12-2018: working on report_coverage_ground_station_for_sift_parallel.py (in code not code/spock/srcPython)

!!!!!!!!! IMPORTANT BEFORE READING THIS FILE
I moved spock to /cygdrive/c/Users/cbv/CYGNSS-SIFT-cbv/code/spock 
but i did that after writing a bunch of notes here so maybe in these notes i metioned a differrnt path of spock. So you need to repalce these paths to spock with /cygdrive/c/Users/cbv/CYGNSS-SIFT-cbv/code/spock
!!!!!!!!! end of IMPORTANT BEFORE READING THIS FILE

ANOTHER IMPORTANT NOTE: in this file i say that the most recent version of SpOCK is in the Windows version. On 01/10/18 I moved on laptop (google drive):
- src from Windows but I kept the src on lapton in ~/src_lap_011018.tgz
- makeall.sh from Windows (and renamed it makeall_9state_lap.sh on laptop) but kep the version of makeall_9state_lap.sh in 010818_9state_lap.sh
- cygnss/gps_tle.py from Windows
In other words, I made copies of what I had before and I still need to move the new versino of SpOCK on desktop and big and pleiades
I then made modif to SpOCK on laptop mac so before making modif on Windows I need to move mac to windows -> OK MOVED IT on jan 12 2018

STILL NEED TO MOVE FROM WINDWOS TO MAC:
report_coverage_ground_station_for_sift_parallel.py

for erros installing SpOCK (libraries and stuff, see emails with subject 'SpOCK' (Nima is in the thread from some of the emails so can look for "nima spock" in gmail, the 1st meail of the thread is October 3 2017)

install Cygwin: 
- go to https://www.cygwin.com/ (!!!!check that no admin required)
- download setup-x86_64.exe 
- open Command Prompt window
- cd Downloads
- setup-x86_64.exe --no-admin
Next
Install from Internet
Just Me or All Users (leave Root Directory as it is)
Next
Direct Connection
"Choose a Download site" : cygwin.mirror.constant.com then Next  (!!!!!!used to beleave blank URL and hit next)
in Select Packages, install these packages (in search bar):
tcsh -> select Shells -> click on Defaut -> check boxes for bin and src, then in search bar:
wget -> select Web -> click on Default  -> check boxes for bin and src, then in search bar:
make -> select Devel -> click on Default -> select 'make: the GNU version of the 'make' utility' -> check boxes for bin and src, then in search bar:
gcc -> select Devel -> click on Deafult -> select 'gcc-g++: GNU Compiler Collection (C++) -> check boxes for bin and src
Click Next
Window 'Resolving Dependencies': click Next (install the recommended packages)
Window 'Create Icons': choose to check or not the boxes, then click on Finish
Note that if you want to install other packages in the future, then you need to rerun 'setup-x86_64.exe --no-admin' and go through these steps. So don't remove the setup-x86_64.exe from your system!

Cygwin provide a functionality similar to a Linux distribution on Windows. 
From now on, the commands need to by typed from a Cygwin terminal window. So open a Cygwin terminal window (if you choose to create an icon in the previous step, there is an icon on your Desktop).
You can access you Windows files from a Cygwin terminal window. For instance, to access the C: drive: cd /cygdrive/c. To go to your Windows home directory: cd /cygdrive/c/Users/user_name.

Install SpOCK. Let's assume here that we install SpOCK in the Windows home directory /cygdrive/c/Users/smith (smith is the user name)

uncompress spock.tgz in Windows home directory (/cygdrive/c/Users/smith)(!!! used to bePut spock.tar.gz inside the Cygwin installation directory (so you can use Cygwin to run SpOCK))
uncompress spock.tar.gz 
cd spock
mkdir gsl_installation
cd gsl_installation
Download and install GSL C version in /cygdrive/c/Users/smith/spock/gsl_intallation:
http://www.gnu.org/software/gsl/ (use the "Main GBU ftp site" link)
Download gsl-latest.tar.gz
Uncompress gsl-latest.tar.gz (you can use tar -zxvf gsl-latest.tar.gz from the Cygwin terminal window)
cd to the gsl folder just created (at the time of writing: cd gsl-2.4)
follow the instructions in the INSTALL document in this folder. At the time of writing, these are:
./configure (but wait, read line right below)
IMPORTANT: during the installation, when running ./configure (first step of this installation), add a prefix with the path to the gsl_installation folder you just created: ./configure --prefix=/cygdrive/c/Users/smith/spock/gsl_intallation/. This will installed gsl in /cygdrive/c/Users/smith/spock/gsl_intallation (GSL needs to be installed in spock/gsl_installation (whereever spock is installed, not necessarily in the home directory), otherwise you need to change the path in the Makefile)
make (this step might take several minutes)
make install


still in the spock directory, download and install Spice for C:
http://naif.jpl.nasa.gov/naif/toolkit_C.html
click on the Cygwin version
download cspice.tar.gz (you don't need to download the other files)
move these two files to the spock directory. In our example: /cygdrive/c/Users/smith/spock/. The installation needs to be done from the spock folder. Otherwise, you'll need to change the path in the Makefile
cd to the spock directory: cd /cygdrive/c/Users/smith/spock
Don't follow the instructions of the README file on webpage from which you just downloaded cspice.tar.gz. At the time of writing, they don't work properly. Follow the three steps below:
- tar -zxvf cspice.tar.gz
- cd cspice
- ./makeall.csh (this might take a few minutes)
Move the following files in the subfolder 'date' of cspice (in our example /cygdrive/c/Users/smith/spock/cspice/data): !!!!!! actuallt yoj shoud put in the Makefile or the makeall.sh a cp of these files to data/ you already do that foe antenna.bin, egm96_to360_not_norm.txt etc that you move in the Mkaefile frmo src to cspice/data
naif0012.tls
de432s.bsp
earth_000101_171116_170825.bpc
pck00010.tpc

go back to spock folder
make clean
make all egm
make all will create the spock executable in the folder spock


!!!!!!
to run SpOCK from Windows Command Prompt:
if gcc:
- compile SpOCK from Cygwin to create spock.exe
- open command prompt window
- if you try to run 'spock.exe' you'll a window will pop up saying:
"the program can't start because cygwin1.dll is missing from your computer. blabla"
To solve that you need to add the path of cygwin/bin in your path. At the time of writing it is: \C:\cygwin64\bin
(see https://stackoverflow.com/questions/6752578/the-program-cant-start-because-cygwin1-dll-is-missing-in-eclipse-cdt)
To add the path: setx path "%path%;c:\cygwin64\bin"
(see https://www.windows-commandline.com/set-path-command-line/)
-> THIS MEANS THOUGH THAT THE USER STILL NEEDS TO INSTALL CYGWIN

if mpicc:
- compile SpOCK from Cygwin to create spock.exe
- open command prompt window
- if you try to run 'spock.exe' you'll a window will pop up saying:
"the program can't start because cyggsl-23.dll is missing from your computer. blabla"
To solve that I added the path to gsl_installatin/bin in the path. So if I put gsl in the spock dir and the spock dir in my windows home dir then: setx path "%path%;c:\Users\cbv\spock\gsl_installation\bin"
note that this won't change the path for the current commant prompt window: you need to restart another window. Does it save it for the next sesssion??? (so if i turn off then on my computer,does this path still in PATH???)
-> STILL NEED TO FIND A WAY TO ADD THIS PATH AUTOMTICALLY AT COMPILATION OF MAKEALL.SH FROM CYGWIN. I knkow how to add it but in the cygwin path, not the windows path (see "so to make sure that this path is added permanently to PATH, I added this in the makeall.sh")
although... since windows doesnt have mpirun, why compiling spock.exe with mpicc? Since we can't even run spock.exe with multi processors... Therefore, if the user wants to run spock.exe from a command prompt, then they should compile with gcc and then they don't have to have the path to gsl libarary in their apth since this problem shows up only when compiling with mpicc
!!!!!!!!!!

!!!!!! need to add the option -static after gcc in the Makefile: CC=${PATH_COMPILER} -static≈ß -DINLINE -Wall -g -std=gnu99 -O0 -Wextra -fdiagnostics-color=auto      but only for the gcc option (I think, unless oyu're using mpicc on Windows but don't know if thats possible anyway)


!!!!!!!! when installing the packages for CYGWIN, need to install also:
- mpi -> select Libs -> libopenmpi12: open message passing interface API (C runtime)
- openmpi -> XXXXXXXXX NEED TO FINISH BUT NEED TO DOWLOAD STUFF HERE OTHERWISE WONT FIND MPI.H WHEN RUNNING SPOCK
-> yes so basically here you take all the lib they suggest you after (see next line right below) and the important package to click here (so before the pop up window mentioned in the next line) is: libopenmpi-devel: Open Message Passing Interface API (development)
also say yes to the next window where it suggesss to download recommended packages



-- IMPORTANT
On Windows when compiling then running with mpirun, I got the error:
error while loading shared libraries: cyggsl-23.ddl: cannot open shared object file: no such file or directory
I had installed gsl in ~/spock/gsl_installation and I found cyggsl-23.ddl in ~/spock/gsl_installation. The path to gsl in the makeall.sh was set to path_gsl=./gsl_installation 
The LD_LIBRARY_PATH solution (see email in this thread on Oct 4) didn't work (it didn't work for gcc either, see email in this thread on Dec 8).

-> However, the solution that worked was:
PATH=$PATH:~/spock/gsl_installation/bin

so to make sure that this path is added permanently to PATH, I added this in the makeall.sh:
# add path to gsl lib and bin (suppsoed to prevent errors like "error while loading shared libraries"). Note: the user still needs to source the .bash_profile after running this makeall.sh file (not poassible to source it within this makeall.sh)
## create the varilable absolute path to gsl
if [[ "${path_gsl:0:1}" == "." ]]; then # if path_gsl includes the current directory "." as first char then repalce "." with absolute path of current directory to create the absolute path to gsl
    path_gsl_after_pwd=$(cut -d "." -f 2 <<< "$path_gsl")
    path_gsl_abso=$PWD$path_gsl_after_pwd
else # otherwise that means that path_gsl is already an absolute path
    path_gsl_abso=$path_gsl
fi
## now add path in .bash_profile if not already in PATH
if [[ ":$PATH:" == *"$path_gsl_abso/bin"* ]]; then
    echo "already have path to gsl lib and bin"
else
    echo "creating path to gsl lib and bin"
    echo "PATH=\$PATH:$path_gsl_abso/bin" >> $HOME/.bash_profile
fi
# end end of add path to gsl lib and bin


-- end of IMPORTANT
   



NOTES:
- I had to change max_degree and max_order in propagator.h to 100 (both) so I don't get segmentation fauld (core dumped) error
- also need to make sure that the main inpu file thas the cspice path consistent with Makefile (same as Makefile with /data added at the end of path)gm




-------
OPENMPI WINDOWS
https://www.open-mpi.org/software/ompi/v1.6/ms-windows.php: "Due to lack of interest and anyone to maintain them, binary support for a Microsoft Windows Open MPI build has been discontinued. There will be no further releases of them unless a new maintainer can be found. Windows-based Open MPI users may choose to use the Cygwin-based Open MPI builds, instead."



end of OPENMPI WINDOWS
--------

-------------------------------------------
INSTALL Python on Windows
good sources:
https://docs.python.org/2/using/windows.html
https://www.davidbaumgold.com/tutorials/set-up-python-windows/ (good to explain how to set upthings with cygwin -> inspire toi de ca pour ton user manual pour SIFT)

IMPORTANT: SIFT is uner version 2.7.10 of Python so download this version of Python
took a few screenshot in Desktop/python_windows on steps to install python but no big trick so just tell them to install python from python.org. looks like they need the admin access but there might be ways around it (if installing python from cygwin --no-admin for isntance)

python27.exe will be installed in /cygdrive/c/Python27 by default. In Cygwin need to add it to he path:
- open cygwin window
- cd
- echo "PATH=\$PATH:/cygdrive/c/Python27" >> .bash_profile
- test: which python -> should return /cygdrive/c/Python27/python

run python script from cygwin:
to run a python script: python script.py
but to run directly the script with './script.py', you need to put this line at the top of script.py: #!/usr/bin/env python
(python script.py will still work fine with this extra line)

run python script on windows:
from ex if the script hello.py is in your windows home directory C:\Users\cbv, type in Command Prompt: C:\Python27\python.exe hello.py
to run it directly from the command prompt, simply type: hello.py
but this requires that hello.py hsa the permission so before i had to do chmod 777 hello.py from my cygwin terminal. so i need to figure out how to give permission without using cygwin. Anyway, the first time you type hello.py a window will pop up asking which application to use, so clik on python then something wierd happens (a window quickly opens and closes), so then type again hello.py in command promop and from now on it will work


note:
the lisst of installed packages/modules are stored in /cygdrive/c/Python27/python/Lib
but it looks like from https://docs.python.org/2/using/windows.html, third-party modules should be stored in /cygdrive/c/Python27/python/Lib/site-packages/

TO INSTALL PACKAGES
from the command prompt:
- C:\Python27\python.exe -m pip install name_package
ex: C:\Python27\python.exe -m pip install numpy will install numpy
that's it, nothing else to do. In the case of numpy, this created a folder directoy in /cygdrive/c/Python27/python/Lib/site-packages/
(you dont need to have pip installed on windows)

NOtse on installing packages:

Paramiko:
I tried to install paramiko: C:\Python27\python.exe -m pip install paramiko
but got the error message: error in cryptography setup command: Invalid environment marker: python_version
I solved it with: C:\Python27\python.exe -m pip install --upgrade pip
then running again: C:\Python27\python.exe -m pip install paramiko

wxPython:
I tried to install wxPython befire Pramiko but got an error so gave up. The I instlled Paramiko. As explained in the note for Paramiko, I had to 'C:\Python27\python.exe -m pip install --upgrade pip' to intall successfully Paramiko. Then I tried again wxPython and it worked. So probably 'C:\Python27\python.exe -m pip install --upgrade pip' solved the error for wxPython too. 


to isntall basemap: Canopy. Dont' need to create an account. I was able to install all the apckages with the method above (C:\Python27\python.exe -m pip install name_package) except basemap (see attemps below). The easy solution that worked was Canopy. just download and isntall canopy from http://docs.enthought.com/canopy/quick-start/install_windows.html (this page has a link to the download page but also explains how to install it). I installed it (didnt require the admin privilleges) then opened it then looked for basemap in 'Available' tab, then installed it. Ddint need to create an account.
But then when i go bck to the command prompt and try to run the script 'C:\Python27\python.exe python hello.py', it doesnt work because it s trying to use the python that we installed previsouly, which doesnt have basemap installed. basemap was installed within canopy so we need to use the python with canopy too. if you click on the tab 'Settings' in Camopy, in sectino Python Environment, the parameter Prefix is wehre python.exe within canopy is. So you  need to use this python to run the script: C:\Users\cbv\AppData\Local\Enthought\Canopy\edm\envs\User\python.exe hello.py
then i thought thtat the packages that i had previously isntalled with 
'C:\Python27\python.exe -m pip install name_package' wouldnt be available from the versino from Canopy (such numpy, scipy etc (see grey packages in Appendix II of suer manual)) but it seems that they are (i tested numpy only). So is it because I installed them before or is it because theya re within Canopy? I think it's because theya re within canopy. So:
1- I still need to make sure that all pagakes i installed with C:\Python27\python.exe -m pip install name_package are available within CAnopy (just run C:\Users\cbv\AppData\Local\Enthought\Canopy\edm\envs\User\python.exe
hello.py) and import these modules in hello.py. If they ar not then try to install them from Canopy but without creating an account

i found that the following packages are not instlled in Canopy by default:
paramiko -> but it looks like we are using paramiko only to connect to the cygnss server, which we don't do in the dsitributed licensed veresion. I still installed using canopy, still without creaeting any user account. Went fine and then worked fine when importing it from the script. This is the only package that was not installed by default in Canopy

2- set up the command prompt so that you can type "python" and it
knows that it's the canopy python to use, not the one in C:\Python27\python.exe. 
On how to make Python Canopy the default python: https://support.enthought.com/hc/en-us/articles/204469730-Make-Canopy-v1-User-Python-be-your-default-Python-i-e-on-the-PATH-
-> I install Rapid Enviornment Editor to easily change the environment variables of the Windows system, such as PATH, which is the environment variable you need to change to get Canopy as the default python (as explained in https://support.enthought.com/hc/en-us/articles/204469730-Make-Canopy-v1-User-Python-be-your-default-Python-i-e-on-the-PATH-)
The only thing I had to do was to add the path of Canopy Python in the variable Path of the tab "User Variables". However, at https://support.enthought.com/hc/en-us/articles/204469730-Make-Canopy-v1-User-Python-be-your-default-Python-i-e-on-the-PATH-, they say the path of Canopy python that you should add is C:\Users\<username>\AppData\Local\Enthought\Canopy\User\Scripts. But for me it doesn't work, there is no such path. So I put the path where I had found python.exe: C:\Users\cbv\AppData\Local\Enthought\Canopy\edm\envs\User\python.exe and it worked. From now on, if I simply type 'python' in the command prompt,it opens python using the Canopy python (I knkow it's the Canopy python because right after i type python, when hit enter it gives a short header with the Enthought in it)



- Attempts to install basemap
 https://matplotlib.org/basemap/users/installing.html

- actually right below didnt work
note that for the step to isntall geos (3rd step, starting with 'Install the GEOS library.'), I had to runs the command export, configure, make, and make install from Cygwin:
untar the absemap tgz (either cygwin or command prompt): tar -zxvf basemap-1.1.0.tar.gz
cd /cygdrive/c/Users/cbv/Downloads/basemap-1.1.0/geos-3.3.3
export GEOS_DIR=/cygdrive/c/Users/cbv (to put the libraries and headers in your Windows home directory) (!!!!!! should i put the in the home directory of Cygwin (/home/cbv)?)
./configure --prefix-$GEOS_DIR
- end of actually right below didnt work

still for basemap: apaprently from https://matplotlib.org/basemap/users/installing.html basemap require proj4
-> i installed proj4 from the proj4 link given at https://matplotlib.org/basemap/users/installing.html (I simpply followed the sintrcutions, I tookk thr 64 bit)

- end of Attempts to install basemap


end of INSTALL Python on Windows
-------------------------------------------


------------
PYINSTALLER
the problen if you isntall pyinstaller with:
C:\Python27\python.exe -m pip install pyinstaller
is that when running: pyinstaller --onefile hello.py
if in hello.py you import basemap, since you installed pyinstaller with the python from C:\Python27 that doesnt have basemap, then when runnning the exeuctable hello.exe it won't find the module basemap
-> need to find a way to link pyinstaller to python of Canopy since it's this python that has basemap 
OR a way to tell pyinstaller to find thepath to bsemap -> see  documentatino about 'spec' file that you can use when running pyinstaller 
OR I could find a way to add basemap path to python path so that even C:\Python27\python.exe can be run and find basemap -> see https://stackoverflow.com/questions/17211078/how-to-temporarily-modify-sys-path-in-python OR simply by adding path of basemap to sys.path OR look at https://leemendelowitz.github.io/blog/how-does-python-find-packages.html

WHAT I TRIED
- created variable PYTHONPATH in Rapid Environmen Editor: didnt work

WHAT WORKED
https://stackoverflow.com/questions/17533094/installing-a-package-to-canopy
basically you opened a "Canopy command prompt". It's really a terminal withing canopy: 
1-Go to tools tab on the canopy editor ,
2-Left click on the canopy command prompt ,
3-Finally pip install pyinstaller and hit Enter key
becaue you pip pyinstaller within the command promp of Canopy, pyinstaller will be linked to Canopy and the .exe created running pyinstaller --onefile hello.py will be able to find all packages installed with Canopy, including basemap
important note: it installed pyinstaller in /cygdrive/c/Users/cbv/AppData/Local/Entought/Canopy/edm/envs/User/Scripts/pyinstaller
then you can use pyinstaller (path top pyinstaller right above) within a windows command prompt (not necessarily Canopy) to create the .exe: pyinstaller --onefile hello.py
STILL NEED TO DO (after the arrow it's my comment i wrote after i completed the step):
- remove basemap from canopy -> i did
- create the .exe with pyinstaller -> i did
- try to run the .exe. of course running the exe will fail becaue can't find basemap -> indeed,  can't find basemap
- install basemap within canopy -> i did
- try to run the exe. Hopefully now it will work -> it doesnt work, i need to recompile with pyinstaller but using the option --clean (see "IMPORTANT" right bwlow)
IMPORTANT: use the option --clean: pyinstaller --clean --onefile hello.py
this Clean PyInstaller cache and remove temporary files before building. If you don't do that then pyinstalleer use the previous configuration of the system to create the .exe. So if you have added module in between the two calls of pyinstaller then if you dont use --clean pyinstller will think the modeuls still don't exist. So to be safe always call --clean

I had to add the path to pyinstaller canopy in PATH: /cygdrive/c\Users\cbv\AppData\Local\Entought\Canopy\edm\envs\User\Scripts\pyinstaller using Rapid Environment Editor



end of PYINSTALLER
------------


------------------------- MOST IMPORTANT
CONCLUSION of installing sift on Windows:
These are the only steps to install sift! (after installing SpOCK)
1- install canopy
2- in canopy install basemap
3- in command prompt of canopy, install pyinstaller (see note somewhere in this doc on how to do that)
4- cd to whwere sift.py is
5- in windows command prompt (or cygwin): pyinstaller --clean --onefile sift.py (need to add path to pyinstaller)
end of CONCLUSION of installing sift on Windows
------------------------- MOST IMPORTANT




IPYTHON: ipython seems to exist within Canopy but couldnt find the path tot he command so i installed it using: pip install ipython (NOT C:\Python27\python.exe -m pip install ipython)
I then actually unistalled it because it was linked to Python27, not Canopy

!!!!!!!!!
when I openeded Canopy (it showed the same window each time I openede before but I was closing it each time) it suggested me to "let Canopy delete the existing Python environment and create a new clean environmtn containing only the packages included in this installer". I was always closing the window but this time I clickd on "Replace with New"
(note: you need to close all terminal windows otherwise it will crash)
After clicking on "Replace with New", windows popped up:
1- removing exisiting python environment direcotry: C:\Users\cbv\AppData\Local\Enthough\Canopy\edm\tmpnycbr1.delete
2- installing python environment "User" - installing Python
3- Setting up your Canopy environment
-> this screwed up my modules because then it couldnt find basemap anymore when importing it from a script (i made sure the python cmmand was still using the canopy python). I iopended canopy and noticed that basemap was not installed anymore. So I installed it again and then I could import basemap fine


Note: from now on need the files cygnss_geometry_2016.txt and my_ground_stations.txt in src/ of spock (these are moved in Makefile (cyg:) from src to input_sift subfolder of sift). 
IMPORTANT about previous note right above: THIS MEANS THAT WHEN RUNNING MAKEALL.SH for sift (so if you don't use SpOCK indepently of sift) you need to add the option cyg in lines of make (the same way you add the options egm and spec). But do that only when using SpOCK within SIFT because this option cyg: cp files to ../../input_sift, a directory that can be found only if makeall.sh is run from the spock folder in sift (in sift/code/spock)
ANOTHER IMPORTANT NOTE: the way read_input_file.py called from sift.py looks for the geometry and ground station files require cygnss_geometry_2016.txt and my_ground_stations.txt to actually be in the same directory as the main input file. Therefore at the beginning of spock_local.py I copy cygnss_geometry_2016.txt and my_ground_stations.tx from ../input_sift to the current directory where sift is compiled (and where SpOCK is run and where the main input file)

Note: in SIFT we don't call spock_cygnss_spec_parallel.py but spock_cygnss_spec_parallel_for_sift.py. The only 2 differences are: 
- in spock_cygnss_spec_parallel_for_sift.py, cygnss_tle.py and gps_tle.py are called as python scripts and not as executables
- in spock_cygnss_spec_parallel_for_sift.py, geometry_filename (when calling spock_main_input function) must have the path ../input_sift since it's in ../input_sift that the geometry filename is stored

Note: to run spock need to call spock.exe on Windows but spock on linux so need to know the operating system in pythono script that runs SpOCK -> in spock_cygnss_spec_parallel_for_sift.py I look at variable platform. If there is the word 'win' in it then it's windows (so call spock.exe), otherwise linux (so call spock)

Note:!!!!!!!!!!!!!!!!! most recent version of find_specular_points.c is on laptop in windows in /cygdrive/c/Users/cbv/CYGNSS-SIFT-cbv/code/spock/src/find_specular_points.c
-> IMPORTANT TO MOVE IT EVERYWEHER (LAPTOP LINUX, DESKTOP, BIG, PLEIADES)

Note: in spock_cygnss_spec_parallel_for_sift.py, I had to replace -np 8 by -np 4 otherwise crashed on windows (for ex if calling spec.exe with -np 8 it said "not enought memory for GPS"). This is because i only have 4 processors. on linux it doesnt crash to call more proc than the number of available proc but on windows it does. Since all machines now haveat least 4 proc, it's safe to keep it at -np 4. 

Note: ipython doesnt work well on cygwin eterminal but works well on windows command prompt terminal

Note: wget seemed not to work when called with os.system in Ipython to dowlnload tles from sapcetrack.org so I'm gonna try with curl. I installed curl within cygwin GUI (canopy command prompt couldnt find curl with pip install)

Note: in cygnss_tle.py and gps_tle.py I had to change two things in call to wget:
- replace the " with ' and vice0versa (otherwise the url couldn't be found)
- remove the output redirection -olog > /dev/null 2>&1
-> !!!!!! THIS MEANS THAT THE CORRECT VESION OF CYGNSS_TLE.PY AND GPS_TLE.PY IS ON WINDOWS ON LAPTOP IN /cygdrive/c/Users/cbv/CYGNSS-SIFT-cbv/code/spock/srcPython. So need to transfer it to laptop mac, desktop, big, pleiades

Note: when I compiled sift.py with pyinstaller I got the error: 
Intel MKL FATAL ERROR: Cannot load mk2_avx2.dll or mk2_def.dll
when i tried to run sift.exe.
The best solution I found is (go in folder with sift.py, called ./ here):
1) in windows command prompt (probably works also in cygwin): pyi-makespec --onefile sift.py -> this creates a file called sift.spec
2) modify sift.spec:
  - under '# -*- mode: python -*-', add the following 4 lines:
import os
from PyInstaller import compat
mkldir = compat.base_prefix
bin_list = [(os.path.join(dp, f),'.' ) for dp, dn, fn in os.walk(os.path.expanduser(mkldir)) for f in fn if (f == 'mk2_avx2.dll' or f == 'mk2_def.dll')]
  - in a = Analysis, modify binaries: instead of 'binaries=[]' put 'binaries=bin_list'
3) in command prompt: pyinstaller --clean --onefile sift.spec -> this will create sift.exe in a folder called disst
4) then move dist/sift.exe to ./
you can now simply run in ./: sift.exe
BE CAREFUL: there might be other tricks to make (here I'm running SIFT without downloading storm files and I've not fulled tested all the features of SIFT (like the zoom or the writing of reports etc)). See email from Dorina on Jan 5 (in particular the datas and hiddenimports thing)



IMPORTANT: I modifided spock src on windows on laptop so most recent version of SpOCK is now on windows laptop in /cygdrive/c/Users/cbv/CYGNSS-SIFT-cbv/code/spock/src. SO MOVE IT EVERYWHERE (LINUX LAPTOP, EEDSKTOP, BIG,PLEIADES) AND DON'T MAKE MODIF IN SPOCK IN THESE PLACES BEFORE MOVING THE WINDOWS VERSION THERE!! (written on jan 5 2018)

!!!!!!!!!!!!!!! THE MOST RECENT MAKEALL.SH IS THE ONE IN WINDOWS OF LATPTOP IN /cygdrive/c/Users/cbv/spock/makeall.sh -> need to move it to laptop, desktop, big (and pleiades) (but be careful when you replace older with this new one ebcause ther are small difference in path from a mcahine to another).SAME FOR MAKEFILE -> take the one from this same path on windoes and move it everywhere