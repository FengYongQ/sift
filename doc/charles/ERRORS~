******* error reported by users
Anthony 02-13-18:
- can't run demo before compling SpOCK
-> solved: makes sense since the python files are moved to code/ when running makeall.sh in the SpOCK install. So IMPORTANT: need to have the python  files already in code/ when devlivering the package so that people don't have to compile SpOCK to move them from srcPython to code/
- when compiling SpOCK, can't find mpi.h
-> solved: Anthony forgot to install the library "libopenmpi-devel: Open Message Passing Interface API (development)" during the Cygwin install
- when compiling SpOCK, can't find lgsl
-> solved: Anthony hadn't followed the instructions to install GSL (./configure, make, make install) (instead, he manually moved all files from the gsl-2.4 to gsl_installation)
Tim 02-13-18 and 02-14-18:
- when installing SPICE and compiling ./makeall.csh, can't find tcsh. In cspice/src/mkprodct.csh tcsh is invoked. It looks like it was not a problem for many installations of SPICE (maybe the version of Windows had tcsh) but Tim got the error. He's using Windows 7.
-> solved: during the Cygwin installation, the user needs to install tcsh
- another error:
$ mpirun -np 2 spock.exe try_spock.txt
[SRBWKS2014-0080:14844] [[729,1],1] tcp_peer_send_blocking: send() to socket 12 failed: Transport endpoint is not connected (128)
[SRBWKS2014-0080:14844] [[729,1],1] tcp_peer_send_blocking: send() to socket 12 failed: Transport endpoint is not connected (128)
-> solved: see email on 02-14-18. Basically the solution is from https://stackoverflow.com/questions/34032655/cygwin-error-tcp-peer-send-blocking-send-to-socket. The details on how Tim solved it are in the emails.
- he also had another error (see last error in emails on 02-14-18) 
-> solved: Tim didn't get it after running SIFT again. I suspect that he might have typed the start or end date wrong (sometimes if you hit 'Space' or other characters, even after erasing, it will be kept in the date and crashes after).

******* end of errors from users
*** 
when installing SpOCK on a mac with nothing on it (borrowed from the IT), it couldn't find wget. wget wasnt installed. So i installed it from http://rudix.org/packages/wget.html. But then when calling wget in cygnss_tle.py and gps_tle.py it didn't work and i had to use the option --check-no-certificate right after wget. Didnd't seem to be an error when calling wget from SpOCK (swpc). Need to dig more into this. Solutions are found here: https://superuser.com/questions/508696/wget-without-no-check-certificate

***
!!! when installing cygwin got error messages "packages corrupted" or "packages in use". the solution i had was to change the root directory (one of the first steps) from C:\cygwin to C:\Users\cbv andt the local packages directory to another location (any location in your home directoy). Looks like just changing the root directoy was enough

***
if mpi.h not found when running SpoCK, it could be due to an error when installing these libs (or the ones that are suggested in the next window) in Cygwin:
- openmpi -> select Libs by clicking on "+" -> select "libopenmpi12: open message passing interface API (C runtime)" AND "libopenmpi-devel: Open Message Passing Interface API (development)" by clicking on Skip, which replaces it with the version name 

***
-- IMPORTANT
On Windows when compiling then running with mpirun, I got the error:
error while loading shared libraries: cyggsl-23.ddl: cannot open shared object file: no such file or directory
I had installed gsl in ~/spock/gsl_installation and I found cyggsl-23.ddl in ~/spock/gsl_installation. The path to gsl in the makeall.sh was set to path_gsl=./gsl_installation 
The LD_LIBRARY_PATH solution (see email in this thread on Oct 4) didn't work (it didn't work for gcc either, see email in this thread on Dec 8).

-> However, the solution that worked was:
PATH=$PATH:~/spock/gsl_installation/bin

so to make sure that this path is added permanently to PATH, I added this in the makeall.sh:
# add path to gsl lib and bin (suppsoed to prevent errors like "error while loading shared libraries"). Note: the user still needs to source the .bash_profile after running this makeall.sh file (not poassible to source it within this makeall.sh)
## create the varilable absolute path to gsl
if [[ "${path_gsl:0:1}" == "." ]]; then # if path_gsl includes the current directory "." as first char then repalce "." with absolute path of current directory to create the absolute path to gsl
    path_gsl_after_pwd=$(cut -d "." -f 2 <<< "$path_gsl")
    path_gsl_abso=$PWD$path_gsl_after_pwd
else # otherwise that means that path_gsl is already an absolute path
    path_gsl_abso=$path_gsl
fi
## now add path in .bash_profile if not already in PATH
if [[ ":$PATH:" == *"$path_gsl_abso/bin"* ]]; then
    echo "already have path to gsl lib and bin"
else
    echo "creating path to gsl lib and bin"
    echo "PATH=\$PATH:$path_gsl_abso/bin" >> $HOME/.bash_profile
fi
# end end of add path to gsl lib and bin


-- end of IMPORTANT



***
NOTES:
- I had to change max_degree and max_order in propagator.h to 100 (both) so I don't get segmentation fauld (core dumped) error
- also need to make sure that the main inpu file thas the cspice path consistent with Makefile (same as Makefile with /data added at the end of path)gm

***
Note: in spock_cygnss_spec_parallel_for_sift.py, I had to replace -np 8 by -np 4 otherwise crashed on windows (for ex if calling spec.exe with -np 8 it said "not enought memory for GPS"). This is because i only have 4 processors. on linux it doesnt crash to call more proc than the number of available proc but on windows it does. Since all machines now haveat least 4 proc, it's safe to keep it at -np 4. 

***
Note: ipython doesnt work well on cygwin eterminal but works well on windows command prompt terminal

***
IMPORTANT
for erros installing SpOCK (libraries and stuff, see emails with subject 'SpOCK' (Nima is in the thread from some of the emails so can look for "nima spock" in gmail, the 1st meail of the thread is October 3 2017)

***
!!!!!! need to add the option -static after gcc in the Makefile: CC=${PATH_COMPILER} -static≈ß -DINLINE -Wall -g -std=gnu99 -O0 -Wextra -fdiagnostics-color=auto      but only for the gcc option (I think, unless oyu're using mpicc on Windows but don't know if thats possible anyway)
i write this months later: actually on mac doesn't work (ld: library not found for -lcrt0.o) so I need to remove it if mac but keep it if windows

